# -*- coding: utf-8 -*-
"""Копия блокнота "Практика 0.6.0.ipynb"

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/170sh4CB9v8RhqJi-iEted6bAUn26aFLK

---

# **Дисклеймер**

В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики

Кучерявин Кирилл Владимирович

---

# Задание 1

**Задача:**

Напишите функцию очищающий список от дубликтов


*Запрещено:*

*   Использовать set() или готовые функции очищающие список от дубликатов

Вввод:

```
apple banana apple 1 3 4 4 5
```


Вывод:

```
apple banana 1 3 4 5
```
"""

old_list = input('').split()
new_list = []

for i in old_list:
    if i not in new_list:
        new_list.append(i)

print(*new_list)

"""# Задание 2

**Задача:**

Написать функцию для нахождения простых чисел в диапазоне

Ввод:

```
10, 50
```

Вывод:

```
11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47
```
"""

def count_simple(n):
    count = 0

    for i in range(1, n + 1):
        if n % i == 0:
            count += 1

    if count == 2:
        return True


start_range = int(input(''))
end_range = int(input(''))
simple_list = []

for i in range(start_range, end_range):
    if count_simple(i) == True:
        simple_list.append(i)

print(*simple_list)

"""# Задание 3

Напишите функцию для объединения двух списков (список ключей и список значении) в словарь

*Запрещено:*

*   Использования готовых функции для объединения списков (пример: zip() )

Дано:

```
keys = ['a', 'b', 'c', 'e' ]
values = [1, 2, 3, 4]
```

Вывод:
```
{'a': 1, 'b': 2, 'c': 3, 'e': 4}
```



"""

keys = ['a', 'b', 'c', 'e' ]
values = [1, 2, 3, 4]
new_dict = dict()

for k in keys:
    for v in values:
        new_dict[k] = v

print(new_dict)

"""# Задание 4

Напишите функцию(ии) для подсчета статистических параметров:
*   Сумму
*   Среднее арифметическое
*   Медиану
*   Моду


*Запрещено:*

*   sum()
*   sorted()
*   и других функции предоставляющих готовое решение задания

Дано:

```
numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]

```

Вывод:
```
{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}
```

"""

def sum_num(n):
    sum_numbers = 0

    for i in n:
        sum_numbers += i
    return sum_numbers


def ave_value(n):
    average = 0
    sum_num = 0
    count = 0

    for i in n:
        sum_num += i
        count += 1

    average = sum_num/count

    return average


def median(n):
    count_max = 0
    count_min = 0

    for i in n:
        for k in n:
            if k < i:
                count_min += 1
            elif k > i:
                count_max += 1

        if count_max == count_min:
            return i
        else:
            count_min = 0
            count_max = 0


def mode_num(n):
    count = 0
    num = 0

    for i in n:
        if n.count(i) > count:
            count = n.count(i)
            num = i
    return num


numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]
new_dict = dict()

new_dict['mean'] = ave_value(numbers)
new_dict['median'] = median(numbers)
new_dict['mode'] = mode_num(numbers)
new_dict['sum'] = sum_num(numbers)

print(new_dict)

"""# Задание 5

На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.

*Запрещено:*

*   len()

Дано:

```
Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.

```

Вывод:
```
Самое длинное слово с номером 5: обязательны
```
"""

def count_symbols(words):
    count_dict = { }
    for word in words:
        count = 0
        for symbol in word:
            count += 1
        count_dict[word] = count

    return count_dict


def find_max(dict_):
    max_k = 0
    max_v = 0
    for k, v in dict_.items():
        if v > max_v:
            max_k = k
            max_v = v

    return max_k

string = 'Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.'
words = string.split(' ')
dict_ = count_symbols(words)
max_word = find_max(dict_)
print(max_word)

"""# Задание 6

Напишите программу, для управления оценками студентов, со следующими функциями:

* Добавление информации о студенте и его оценках.
* Подсчет среднего балла студента.
* Получение списка всех студентов с их средними баллами.
* Поиск студента по имени и вывод его оценок и среднего балла.




"""

def GPA(n):
    average = 0
    sum_num = 0
    count = 0

    for i in n:
        i = int(i)
        sum_num += i
        count += 1

    average = sum_num/count
    return average


all_student_dict = dict()

while True:
    print('Введите что хотите сделать')
    user_enter = int(input('1.Добавить студента и его оценки \n'
    '2.Получить список студентов с их средними баллами \n'
    '3.Поиск студента по имени и вывод его оценок и среднего балла \n'
    '4.Завершить работу программы '))

    if user_enter == 1:
        student = input('Введите имя студента: ')
        rating = (input('Введите оценки студента через пробел: ')).split()
        all_student_dict[student] = GPA(rating)

    if user_enter == 2:
        print(all_student_dict)

    if user_enter == 3:
        name_student = input('Введите имя нужного студента: ')
        print(all_student_dict[name_student])

    if user_enter == 4:
        break

"""# Задание 7


**Задача:**

Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.

Ключевые особенности:

*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос
*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.
*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.
*  Реализуйте функцию добавления нового вопроса
*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса

"""

import random


questions = [
    {
        "question": "Какой цвет получается при смешивании синего и желтого?",
        "answer": "зеленый",
        "points": 1
    },
    {
        "question": "Столица Франции?",
        "answer": "Париж",
        "points": 1
    },
    {
        "question": "Сколько планет в Солнечной системе?",
        "answer": "8",
        "points": 1
    }
]



def add_question(question, answer, points):
    questions.append({"question": question, "answer": answer, "points": points})



def rand_questions():
    random.shuffle(questions)



def run_quiz():
    score = 0
    rand_questions()
    print("Добро пожаловать в викторину!")

    for q in questions:
        user_answer = input(q["question"] + " ").strip().lower()
        if user_answer == q["answer"].lower():
            print("Правильно!")
            score += q["points"]
        else:
            print("Неправильно! Правильный ответ:", q["answer"])

    print("Ваша общая оценка:", score, "из", len(questions))



def main():
    while True:
        print("\n1. Начать викторину")
        print("2. Добавить вопрос")
        print("3. Выход")

        choice = input("Выберите действие (1-3): ")

        if choice == '1':
            run_quiz()
        elif choice == '2':
            question = input("Введите вопрос: ")
            answer = input("Введите правильный ответ: ")
            points = int(input("Введите баллы за вопрос: "))
            add_question(question, answer, points)
            print("Вопрос добавлен.")
        elif choice == '3':
            print("Спасибо за участие!")
            break
        else:
            print("Некорректный выбор, попробуйте снова.")


print(main())